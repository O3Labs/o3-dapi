version: 0.2

run-as: root

env:
  variables:
    NEO_DOCS_BUCKET_NAME: "neodapidocs.o3.network"
    NEO_DOCS_DISTRIBUTION_ID: "E3FNU7MRCVVDLZ"
    NEO3_DOCS_BUCKET_NAME: "neo3dapidocs.o3.network"
    NEO3_DOCS_DISTRIBUTION_ID: "E2PV3J59FEUQMH"
    ONT_DOCS_BUCKET_NAME: "ontdapidocs.o3.network"
    ONT_DOCS_DISTRIBUTION_ID: "EOLLDLPJJG41F"
    ETH_DOCS_BUCKET_NAME: "ethdapidocs.o3.network"
    ETH_DOCS_DISTRIBUTION_ID: "E2ALW1DL5HUXHZ"
    DOCS_DISTRIBUTION_ID: "ECTYGKE66GGGC"
    ONT_TESTBED_BUCKET_NAME: "ontdapitestbed.o3.app"
    ONT_TESTBED_DISTRIBUTION_ID: "E3PXLO44HLRNK5"
    NEO_TESTBED_BUCKET_NAME: "neodapitestbed.o3.app"
    NEO_TESTBED_DISTRIBUTION_ID: "EUCWR0DB12L5Z"
    NEO3_TESTBED_BUCKET_NAME: "neo3dapitestbed.o3.app"
    NEO3_TESTBED_DISTRIBUTION_ID: "E1HHHBBMWY6R5V"
    ETH_TESTBED_BUCKET_NAME: "ethdapitestbed.o3.app"
    ETH_TESTBED_DISTRIBUTION_ID: "E2I7P8ARZ8CFUU"

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - gem install bundler
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - curl -sL https://deb.nodesource.com/setup_12.x | bash -
      - apt-get install -y nodejs
  pre_build:
    commands:
      - cd packages/neo/docs
      - bundle install
      - cd ../../neo3/docs
      - bundle install
      - cd ../../ont/docs
      - bundle install
      - cd ../../eth/docs
      - bundle install
  build:
    commands:
      - cd ../../neo/docs
      - bundle exec middleman build --clean
      - cd ../../neo3/docs
      - bundle exec middleman build --clean
      - cd ../../ont/docs
      - bundle exec middleman build --clean
      - cd ../../eth/docs
      - bundle exec middleman build --clean
  post_build:
    commands:
      - cd ../../neo/docs/build
      - aws s3 sync . "s3://${NEO_DOCS_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${NEO_DOCS_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../neo3/docs/build
      - aws s3 sync . "s3://${NEO3_DOCS_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${NEO3_DOCS_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../../ont/docs/build
      - aws s3 sync . "s3://${ONT_DOCS_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${ONT_DOCS_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../../eth/docs/build
      - aws s3 sync . "s3://${ETH_DOCS_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${ETH_DOCS_DISTRIBUTION_ID}" --paths "/*"
      - aws cloudfront create-invalidation --distribution-id "${DOCS_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../../neo/test
      - aws s3 sync . "s3://${NEO_TESTBED_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${NEO_TESTBED_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../neo3/test
      - aws s3 sync . "s3://${NEO3_TESTBED_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${NEO3_TESTBED_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../ont/test
      - aws s3 sync . "s3://${ONT_TESTBED_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${ONT_TESTBED_DISTRIBUTION_ID}" --paths "/*"
      - cd ../../eth/test
      - aws s3 sync . "s3://${ETH_TESTBED_BUCKET_NAME}" --delete
      - aws cloudfront create-invalidation --distribution-id "${ETH_TESTBED_DISTRIBUTION_ID}" --paths "/*"